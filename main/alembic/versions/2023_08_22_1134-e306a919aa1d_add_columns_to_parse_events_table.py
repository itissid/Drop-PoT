"""Add columns to parse_events table

Revision ID: e306a919aa1d
Revises: 
Create Date: 2023-08-22 11:34:28.417737

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'e306a919aa1d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('SubmoodBasedEmbeddingTextAccessorTable')
    # op.drop_table('SubmoodBasedEmbeddingsTable')
    # op.drop_table('MoodJsonTable')
    op.drop_table('tmpssv')
    op.drop_table('test')
    op.add_column('parsed_events', sa.Column(
        'chat_history', sa.JSON(), nullable=True))
    op.add_column('parsed_events', sa.Column(
        'replay_history', sa.JSON(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    pass
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('test',
    # sa.Column('id', sa.INTEGER(), nullable=True),
    # sa.Column('data', sa.TEXT(), nullable=True)
    # )
    # op.create_table('tmpssv',
    # sa.Column('ID', sa.INTEGER(), nullable=True),
    # sa.Column('keyCol', sa.TEXT(), nullable=True),
    # sa.Column('ssvCol', sa.TEXT(), nullable=True),
    # sa.PrimaryKeyConstraint('ID')
    # )
    # op.create_table('MoodJsonTable',
    # sa.Column('id', sa.INTEGER(), nullable=False),
    # sa.Column('mood', sa.VARCHAR(), nullable=False),
    # sa.Column('sub_moods', sa.TEXT(), nullable=False),
    # sa.Column('flavor', sa.VARCHAR(), nullable=False),
    # sa.Column('version', sa.VARCHAR(), nullable=False),
    # sa.PrimaryKeyConstraint('id'),
    # sa.UniqueConstraint('mood', 'flavor', 'version', name='mood_name_version')
    # )
    # op.create_table('SubmoodBasedEmbeddingsTable',
    # sa.Column('id', sa.INTEGER(), nullable=False),
    # sa.Column('mood_id', sa.INTEGER(), nullable=True),
    # sa.Column('version', sa.VARCHAR(), nullable=False),
    # sa.Column('sub_mood', sa.VARCHAR(), nullable=False),
    # sa.Column('embedding_text', sa.TEXT(), nullable=False),
    # sa.Column('embedding_text_composite_type', sa.VARCHAR(), nullable=False),
    # sa.Column('embedding_vector', sa.BLOB(), nullable=True),
    # sa.ForeignKeyConstraint(['mood_id'], ['MoodJsonTable.id'], ),
    # sa.PrimaryKeyConstraint('id'),
    # sa.UniqueConstraint('mood_id', 'sub_mood', 'embedding_text_composite_type', 'version', name='mood_submood_composite_version')
    # )
    # op.create_table('SubmoodBasedEmbeddingTextAccessorTable',
    # sa.Column('id', sa.INTEGER(), nullable=False),
    # sa.Column('submood_accessor_json_path', sa.VARCHAR(), nullable=False),
    # sa.Column('embedding_accessor_json_path', sa.VARCHAR(), nullable=False),
    # sa.Column('mood_id_ref', sa.INTEGER(), nullable=True),
    # sa.Column('composite_type', sa.VARCHAR(), nullable=False),
    # sa.ForeignKeyConstraint(['mood_id_ref'], ['MoodJsonTable.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # ### end Alembic commands ###
